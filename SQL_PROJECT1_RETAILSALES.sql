CREATE DATABASE SQL_PROJECT_1;
SHOW DATABASES;
USE SQL_PROJECT_1;

CREATE TABLE RETAIL_SALES(
transactions_id INT PRIMARY KEY,
sale_date DATE,	
sale_time TIME,	
customer_id INT,	
gender VARCHAR(15),	
age INT,
category VARCHAR(15),
quantiy INT,
price_per_unit FLOAT,
cogs FLOAT,
total_sale FLOAT
);
SELECT * FROM RETAIL_SALES;
SELECT * FROM RETAIL_SALES
WHERE TRANSACTIONS_ID IS NULL
OR 
SALE_DATE IS NULL
OR
SALE_TIME IS NULL
OR
CUSTOMER_ID IS NULL
OR 
GENDER IS NULL
OR
AGE IS NULL
OR
CATEGORY IS NULL
OR
QUANTIY IS NULL
OR 
PRICE_PER_UNIT IS NULL
OR 
COGS IS NULL 
OR 
TOTAL_SALE IS NULL;


DELETE FROM RETAIL_SALES
WHERE TRANSACTIONS_ID IS NULL
OR 
SALE_DATE IS NULL
OR
SALE_TIME IS NULL
OR
CUSTOMER_ID IS NULL
OR 
GENDER IS NULL
OR
AGE IS NULL
OR
CATEGORY IS NULL
OR
QUANTIY IS NULL
OR 
PRICE_PER_UNIT IS NULL
OR 
COGS IS NULL 
OR 
TOTAL_SALE IS NULL;

SELECT COUNT(*) FROM RETAIL_SALES;

-- Data Exploration
-- HOW MANY SALES WE HAVE
SELECT COUNT(*) AS TOTAL_SALES FROM RETAIL_SALES;
-- HOW MANY  UNIQUE CUSTOMERS WE HAVE
SELECT COUNT(DISTINCT CUSTOMER_ID) AS NO_CUSTOMERS FROM RETAIL_SALES;
-- HOW MANY UNIQUE CATEGORY DO WE HAVE
SELECT COUNT(DISTINCT CATEGORY) AS NO_CATEGORY FROM RETAIL_SALES;

-- DATA ANALYSIS(BUSINESS KEY PROBLEMS)
-- Q1) WRITE A SQL QUERY TO RETRIEVE ALL COLUMNS FOR SALES MADE ON '2022-11-05'
SELECT * 
FROM RETAIL_SALES
WHERE SALE_DATE='2022-11-05';

SELECT 
*
FROM RETAIL_SALES
WHERE
CATEGORY='CLOTHING'
AND QUANTIY>=4;

-- TOTAL SALES FOR EACH CATEGORY
SELECT CATEGORY,
SUM(TOTAL_SALE) AS NET_SALE,
COUNT(*) AS TOTAL_ORDERS
FROM RETAIL_SALES
GROUP BY CATEGORY;

-- AVERAGE AGE OF CUSTOMERS WHO PURCHASED ITEMS FROM THE BEAUTY CATEGORY
SELECT ROUND(avg(AGE),2) AS AVERAGE_AGE
FROM RETAIL_SALES
WHERE CATEGORY='BEAUTY';      
-- SQL QUERY TO FIND ALL TRANSACTIONS WHERE THE TOTAL_SALE IS GREATER THAN 1000
SELECT * FROM 
RETAIL_SALES
WHERE TOTAL_SALE > 1000;           

SELECT 
CATEGORY,
COUNT(TRANSACTIONS_ID) AS TOTAL_NO_OFTRANSACTIONS,
GENDER
FROM RETAIL_SALES
GROUP BY CATEGORY,
GENDER;

SELECT
EXTRACT(YEAR FROM SALE_DATE) AS YEAR,
EXTRACT(MONTH FROM SALE_DATE) AS MONTH,
AVG(TOTAL_SALE) AS AVG_SALE
FROM RETAIL_SALES
GROUP BY 1,2
ORDER BY 1,2,3 DESC;

-- TOP 5 CUSTOMERS BASED ON THE HIGHEST TOTAL SALES
SELECT CUSTOMER_ID,SUM(TOTAL_SALE) AS TOTAL_SALES
FROM RETAIL_SALES
GROUP BY CUSTOMER_ID
ORDER BY TOTAL_SALES DESC
LIMIT 5;


-- SQL QUERY FOR FINDING THE NUMBER OF UNIQUE CUSTOMERS WHO PURCHASED ITEMS FROM EACH CATEGORY
SELECT COUNT(DISTINCT CUSTOMER_ID) AS NO_CUSTOMERS,
CATEGORY
FROM RETAIL_SALES
GROUP BY CATEGORY;

-- SQL QUERY TO CREATE SHIFT AND NUMBER OF ORDERS


SELECT *,
CASE
WHEN EXTRACT(HOUR FROM SALE_TIME)<12 THEN 'MORNING'
WHEN  EXTRACT(HOUR FROM SALE_TIME) BETWEEN 12 AND 17 THEN 'AFTERNOON'
ELSE 'EVENING'
END AS SHIFT 
FROM RETAIL_SALES;
-- END OF PROJECT





 









